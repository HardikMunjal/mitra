{
  "_args": [
    [
      {
        "raw": "jsonexport",
        "scope": null,
        "escapedName": "jsonexport",
        "name": "jsonexport",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/hardi/2017/qlik_wrapper"
    ]
  ],
  "_from": "jsonexport@latest",
  "_id": "jsonexport@2.2.1",
  "_inCache": true,
  "_location": "/jsonexport",
  "_nodeVersion": "8.11.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/jsonexport_2.2.1_1531431076657_0.15863824213134348"
  },
  "_npmUser": {
    "name": "kauegimenes",
    "email": "kaue.gimenes@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jsonexport",
    "scope": null,
    "escapedName": "jsonexport",
    "name": "jsonexport",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/jsonexport/-/jsonexport-2.2.1.tgz",
  "_shasum": "b25a8a6e805e7179ef20460715ba2b92ebc32753",
  "_shrinkwrap": null,
  "_spec": "jsonexport",
  "_where": "/home/hardi/2017/qlik_wrapper",
  "author": {
    "name": "KauÃª Gimenes"
  },
  "bin": {
    "jsonexport": "bin/jsonexport.js"
  },
  "bugs": {
    "url": "https://github.com/kauegimenes/jsonexport/issues"
  },
  "dependencies": {},
  "description": "Makes easy to convert JSON to CSV",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "benchmark": "^2.1.4",
    "chai": "^4.1.2",
    "jshint": "^2.9.5",
    "mocha": "^5.2.0",
    "npm-run-all": "^4.1.3",
    "pre-commit": "^1.2.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-5380+891nqSI2gzLqSwzM/Cy+18RFzI7pCqbCjU+cOw7CZKVQcN2tplMHy1kiflpYERu0yW9E7Xe/FvkTry6vA==",
    "shasum": "b25a8a6e805e7179ef20460715ba2b92ebc32753",
    "tarball": "https://registry.npmjs.org/jsonexport/-/jsonexport-2.2.1.tgz",
    "fileCount": 35,
    "unpackedSize": 88104,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbR8ikCRA9TVsSAnZWagAACSMP/ihgw3sqBGAzPwzrE2lH\n7fCVJ1fe0ZaGFb5Dr9Cgi3TUCcFKxzAFpdbgw7d8VnK7YXrvSV8xFR/iVZbn\nss99bA1fD6yPnwMAbVX4T/Od7f2DB4oNOU8kfWbfeh0TDjnU2sseKdT6fmQQ\n07BYuq8Ue+cDFt98agLI5kRmnAndj/MwP/ECHEYthJvHz0kkXWVhFnXWF1+Z\n39lMV1oybuyXABNa4kQjR7fvqh/Gsmi8BiG47jbMaSPcl/Lml9RS7HsDT9hw\nJ5XDZEDcrYWDML/cIVM7zCn9Jchkwk5LhaKS7xPoqnxb1uiu6wBWdg2t4JL2\nhw3JbJ03oWRp6AKIJM6detnpYsuX91kBL9ehKbg/StNO2ORW+24iAmpG0t2j\nbyptIRm7lzKLBiVBL5Qg5Vs7bXGEbJ/oJWNkFPKJvmuONFq29QU7yrXv56nH\nv3R0BwKdxF3iElHvBFHVR20PwVWEIC+zwsCHEw/2GIAld90v5yy06KPw76ua\nOUA1LF9SO6kZXj0zKRS5MOerQV/M0ZjfhQNsq8R9OQLqPfZErRh/U7lM8LWw\nze70EcrpYCpe2uS8hBkxbYIrurL9+hCI5pnPStN/MKSIdJNeGVlWCaDo/8PD\nPhJ5soQbofdN+QnQg2n4Dw8sEXGKJ87iZ/xJxytmjYjoM1wxuZG7j1uY4MjS\ncthg\r\n=jTuM\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "229119dc151285d41daf8d0b0ac1170770df3657",
  "homepage": "https://github.com/kauegimenes/jsonexport",
  "keywords": [
    "export",
    "json",
    "to",
    "2",
    "csv",
    "converter",
    "output",
    "array",
    "object",
    "json-to-csv",
    "json2csv",
    "parse",
    "stream",
    "transform",
    "big",
    "files"
  ],
  "license": "Apache-2.0",
  "main": "./lib",
  "maintainers": [
    {
      "name": "ackerapple",
      "email": "acker.dawn.apple@gmail.com"
    },
    {
      "name": "kauegimenes",
      "email": "kaue.gimenes@gmail.com"
    },
    {
      "name": "papswell",
      "email": "papswell@gmail.com"
    }
  ],
  "name": "jsonexport",
  "optionalDependencies": {},
  "pre-commit": [
    "build:dist"
  ],
  "readme": "# jsonexport\n\n[![Travis](https://travis-ci.org/kauegimenes/jsonexport.svg)](https://travis-ci.org/kauegimenes/jsonexport)\n[![bitHound Overall Score](https://www.bithound.io/github/kauegimenes/jsonexport/badges/score.svg)](https://www.bithound.io/github/kauegimenes/jsonexport)\n[![bitHound Code](https://www.bithound.io/github/kauegimenes/jsonexport/badges/code.svg)](https://www.bithound.io/github/kauegimenes/jsonexport)\n[![Known Vulnerabilities](https://snyk.io/test/npm/jsonexport/badge.svg)](https://snyk.io/test/npm/jsonexport)\n[![NPM Version](http://img.shields.io/npm/v/jsonexport.svg?style=flat)](https://www.npmjs.org/package/jsonexport)\n[![NPM Downloads](https://img.shields.io/npm/dm/jsonexport.svg?style=flat)](https://www.npmjs.org/package/jsonexport)\n[![NPM Downloads](https://img.shields.io/npm/dt/jsonexport.svg?style=flat)](https://www.npmjs.org/package/jsonexport)\n[![NPM License](https://img.shields.io/npm/l/jsonexport.svg?style=flat)](https://www.npmjs.org/package/jsonexport)\n[![GitHub stars](https://img.shields.io/github/stars/kauegimenes/jsonexport.svg)](https://github.com/kauegimenes/jsonexport/stargazers)\n[![Try jsonexport on RunKit](https://badge.runkitcdn.com/jsonexport.svg)](https://npm.runkit.com/jsonexport)\n\nThis module makes easy to convert JSON to CSV and its very customizable.\n\n[Project Page](http://kauegimenes.github.io/jsonexport/)\n\n[Online Demo Page](http://kauegimenes.github.io/jsonexport/demo/)\n\n<details>\n  <summary><b>Table of Contents</b></summary>\n\n- [Usage](#usage)\n- [CLI](#cli)\n- [Browser](#browser)\n  - [Browser Import Examples](#browser-import-examples)\n- [Stream](#stream)\n- [JSON Array Example](#json-array-example)\n  - [Simple Array](#simple-array)\n  - [JSON Object Example](#json-object-example)\n- [Options](#options)\n  - [typeHandlers](#typehandlers)\n- [Contributors](#contributors)\n\n</details>\n\n\n# Usage\n\nInstallation command is `npm install jsonexport`.\n\nRun tests with `npm test`.\n\n```javascript\nvar jsonexport = require('jsonexport');\n\njsonexport({lang: 'Node.js',module: 'jsonexport'}, {rowDelimiter: '|'}, function(err, csv){\n    if(err) return console.log(err);\n    console.log(csv);\n});\n```\n\n## CLI\n\nGlobal installation command is `npm install -g jsonexport`.\n\nConvert JSON to CSV using `cat data.json | jsonexport` or `jsonexport data.json`\n\nUsage: `jsonexport <JSON filename> <CSV filename>`\n\n## Browser\nUse the code in the folder named **dist** to run jsonexport in the browser\n\n### Browser Import Examples\n\nWebpack\n```javascript\nvar jsonexport = require(\"jsonexport/dist\")\n```\n\nTypescript\n```javascript\nimport * as jsonexport from \"jsonexport/dist\"\n```\n\n## Stream\n\n```javascript\nvar jsonexport = require('jsonexport');\nvar fs = require('fs');\n\nvar reader = fs.createReadStream('data.json');\nvar writer = fs.createWriteStream('out.csv');\n\nreader.pipe(jsonexport()).pipe(writer);\n```\n\n## JSON Array Example\n\n### Simple Array\n\n#### Code\n\n```javascript\nvar jsonexport = require('jsonexport');\n\nvar contacts = [{\n    name: 'Bob',\n    lastname: 'Smith'\n},{\n    name: 'James',\n    lastname: 'David'\n},{\n    name: 'Robert',\n    lastname: 'Miller'\n},{\n    name: 'David',\n    lastname: 'Martin'\n}];\n\njsonexport(contacts,function(err, csv){\n    if(err) return console.log(err);\n    console.log(csv);\n});\n```\n\n#### Result\n\n```\nname,lastname\nBob,Smith\nJames,David\nRobert,Miller\nDavid,Martin\n```\n\n### Complex Array\n\n#### Code\n\n```javascript\nvar jsonexport = require('jsonexport');\n\nvar contacts = [{\n   name: 'Bob',\n   lastname: 'Smith',\n   family: {\n       name: 'Peter',\n       type: 'Father'\n   }\n},{\n   name: 'James',\n   lastname: 'David',\n   family:{\n       name: 'Julie',\n       type: 'Mother'\n   }\n},{\n   name: 'Robert',\n   lastname: 'Miller',\n   family: null,\n   location: [1231,3214,4214]\n},{\n   name: 'David',\n   lastname: 'Martin',\n   nickname: 'dmartin'\n}];\n\njsonexport(contacts,function(err, csv){\n    if(err) return console.log(err);\n    console.log(csv);\n});\n```\n\n#### Result\n\n```\nname,lastname,family.name,family.type,family,location,nickname\nBob,Smith,Peter,Father\nJames,David,Julie,Mother\nRobert,Miller,,,,1231;3214;4214\nDavid,Martin,,,,,dmartin\n```\n\n## JSON Object Example\n\n### Simple Object\n\n#### Code\n\n```javascript\nvar jsonexport = require('jsonexport');\n\nvar stats = {\n    cars: 12,\n    roads: 5,\n    traffic: 'slow'\n};\n\njsonexport(stats,function(err, csv){\n    if(err) return console.log(err);\n    console.log(csv);\n});\n```\n\n#### Result\n\n```\ncars,12\nroads,5\ntraffic,slow\n```\n\n### Complex Object\n\n#### Code\n\n```javascript\nvar jsonexport = require('jsonexport');\n\nvar stats = {\n    cars: 12,\n    roads: 5,\n    traffic: 'slow',\n    speed: {\n        max: 123,\n        avg: 20,\n        min: 5\n    },\n    size: [10,20]\n};\n\njsonexport(stats,function(err, csv){\n    if(err) return console.log(err);\n    console.log(csv);\n});\n```\n\n#### Result\n\n```\ncars,12\nroads,5\ntraffic,slow\nspeed.max,123\nspeed.avg,20\nspeed.min,5\nsize,10;20\n```\n\n## Options\n\nIn order to get the most of out of this module, you can customize many parameters and functions.\n\n- `headerPathString` - `String` Used to create the propriety path, defaults to `.` example `contact: {name: 'example}` = `contact.name`\n- `fillGaps` - `Boolean` Set this option if don't want to have empty cells in case of an object with multiple nested items (array prop), defaults to `false` [Issue #22](https://github.com/kauegimenes/jsonexport/issues/22)\n- `headers` - `Array` Used to set a custom header order, defaults to `[]` example `['lastname', 'name']`\n- `rename` - `Array` Used to set a custom header text, defaults to `[]` example `['Last Name', 'Name']`\n- `rowDelimiter` - `String` Change the file row delimiter\n    - Defaults to `,` (**cvs format**).\n    - Use `\\t` for **xls format**.\n    - Use `;` for (**windows excel .csv format**).\n- `textDelimiter` - `String` The character used to escape the text content if needed (default to `\"`)\n- `forceTextDelimiter` - `Boolean` Set this option to true to wrap every data item and header in the textDelimiter. Defaults to `false`\n- `endOfLine` - `String` Replace the OS default EOL.\n- `mainPathItem` - `String` Every header will have the `mainPathItem` as the base.\n- `arrayPathString` - `String` This is used to output primitive arrays in a single column, defaults to `;`\n- `booleanTrueString` - `String` Will be used instead of `true`.\n- `booleanFalseString` - `String` Will be used instead of `false`.\n- `includeHeaders` - `Boolean` Set this option to false to hide the CSV headers.\n- `undefinedString` - `String` If you want to display a custom value for undefined strings, use this option. Defaults to ` `.\n- `verticalOutput` - `Boolean` Set this option to false to create a horizontal output for JSON Objects, headers in the first row, values in the second.\n- `typeHandlers` - `{typeName:(value, index, parent)=>any` A key map of constructors used to match by instance to create a value using the defined function ([see example](#typehandlers))\n\n**Deprecated Options** (Use typeHandlers)\n- `handleString` - `Function` Use this to customize all `Strings` in the CSV file.\n- `handleNumber` - `Function` Use this to customize all `Numbers` in the CSV file.\n- `handleBoolean` - `Function` Use this to customize all `Booleans` in the CSV file.\n- `handleDate` - `Function` Use this to customize all `Dates` in the CSV file. (default to date.toLocaleString)\n\n\n#### typeHandlers\nDefine types by constructors and what function to run when that type is matched\n\n```javascript\nvar jsonexport = require('jsonexport');\n\n//data\nvar contacts = {\n  'a' : Buffer.from('a2b', 'utf8'),\n  'b' : Buffer.from('other field', 'utf8'),\n  'x' : 22,\n  'z' : function(){return 'bad ace'}\n};\n\nvar options={\n  //definitions to type cast\n  typeHandlers:{\n    Array:function(value,index,parent){\n      return 'replaced-array';\n    },\n    Boolean:function(value,index,parent){\n      return 'replaced-boolean';\n    },\n    Function:function(value,index,parent){\n      return value()\n    },\n    Number:function(value,index,parent){\n      return 'replaced-number';\n    },\n    String:function(value,index,parent){\n      return 'replaced-string';\n    },\n    Buffer:function(value,index,parent){\n      return value.toString()\n    }\n  }\n}\n\njsonexport(contacts, options, function(err, csv){\n  console.log( csv )\n});\n```\n\nThe output would be:\n```\na,a2b\nb,other field\nx,replaced-number\nz,bad ace\n```\n\n\nWhen using **typeHandlers**, Do NOT do this\n\n```\nvar options={\n  typeHandlers:{\n    Object:function(value,index,parent){\n      return 'EVERYTHING IS AN OBJECT';\n    }\n  }\n}\n```\n> It is NOT an error, however the recursive result becomes illegable functionality strings\n\n## Contributors\n- [KauÃª Gimenes](https://github.com/kauegimenes)\n- [Pierre Guillaume](https://github.com/papswell)\n- [Acker Apple](https://github.com/AckerApple) [![hire me](https://ackerapple.github.io/resume/assets/images/hire-me-badge.svg)](https://ackerapple.github.io/resume/)\n- [Victor Hahn](https://github.com/rv-vhahn)\n- [And many more...](https://github.com/kauegimenes/jsonexport/graphs/contributors)",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kauegimenes/jsonexport.git"
  },
  "runkitExampleFilename": "examples/simple.js",
  "scripts": {
    "build:dist": "npm-run-all build:dist:js build:dist:overwrite",
    "build:dist:js": "babel lib --out-dir dist --presets=env",
    "build:dist:overwrite": "node ./bin/builddist.js",
    "lint": "jshint ./lib/index.js",
    "test": "mocha tests/*.js tests/**/*.js"
  },
  "version": "2.2.1"
}
